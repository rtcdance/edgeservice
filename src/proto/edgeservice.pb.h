// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: edgeservice.proto
// Protobuf C++ Version: 5.29.3

#ifndef edgeservice_2eproto_2epb_2eh
#define edgeservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_edgeservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_edgeservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_edgeservice_2eproto;
namespace edgeservice {
class AsyncCaptureRequest;
struct AsyncCaptureRequestDefaultTypeInternal;
extern AsyncCaptureRequestDefaultTypeInternal _AsyncCaptureRequest_default_instance_;
class AsyncCaptureResponse;
struct AsyncCaptureResponseDefaultTypeInternal;
extern AsyncCaptureResponseDefaultTypeInternal _AsyncCaptureResponse_default_instance_;
class CameraCheckResult;
struct CameraCheckResultDefaultTypeInternal;
extern CameraCheckResultDefaultTypeInternal _CameraCheckResult_default_instance_;
class CameraInfo;
struct CameraInfoDefaultTypeInternal;
extern CameraInfoDefaultTypeInternal _CameraInfo_default_instance_;
class CaptureRequest;
struct CaptureRequestDefaultTypeInternal;
extern CaptureRequestDefaultTypeInternal _CaptureRequest_default_instance_;
class CaptureResponse;
struct CaptureResponseDefaultTypeInternal;
extern CaptureResponseDefaultTypeInternal _CaptureResponse_default_instance_;
class GenPlayUrlRequest;
struct GenPlayUrlRequestDefaultTypeInternal;
extern GenPlayUrlRequestDefaultTypeInternal _GenPlayUrlRequest_default_instance_;
class GenPlayUrlResponse;
struct GenPlayUrlResponseDefaultTypeInternal;
extern GenPlayUrlResponseDefaultTypeInternal _GenPlayUrlResponse_default_instance_;
class GetResultRequest;
struct GetResultRequestDefaultTypeInternal;
extern GetResultRequestDefaultTypeInternal _GetResultRequest_default_instance_;
class GetResultResponse;
struct GetResultResponseDefaultTypeInternal;
extern GetResultResponseDefaultTypeInternal _GetResultResponse_default_instance_;
}  // namespace edgeservice
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace edgeservice {

// ===================================================================


// -------------------------------------------------------------------

class GetResultRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edgeservice.GetResultRequest) */ {
 public:
  inline GetResultRequest() : GetResultRequest(nullptr) {}
  ~GetResultRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetResultRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetResultRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetResultRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetResultRequest(const GetResultRequest& from) : GetResultRequest(nullptr, from) {}
  inline GetResultRequest(GetResultRequest&& from) noexcept
      : GetResultRequest(nullptr, std::move(from)) {}
  inline GetResultRequest& operator=(const GetResultRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetResultRequest& operator=(GetResultRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetResultRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetResultRequest* internal_default_instance() {
    return reinterpret_cast<const GetResultRequest*>(
        &_GetResultRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(GetResultRequest& a, GetResultRequest& b) { a.Swap(&b); }
  inline void Swap(GetResultRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetResultRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetResultRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetResultRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetResultRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetResultRequest& from) { GetResultRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetResultRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "edgeservice.GetResultRequest"; }

 protected:
  explicit GetResultRequest(::google::protobuf::Arena* arena);
  GetResultRequest(::google::protobuf::Arena* arena, const GetResultRequest& from);
  GetResultRequest(::google::protobuf::Arena* arena, GetResultRequest&& from) noexcept
      : GetResultRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTaskIdFieldNumber = 1,
  };
  // string task_id = 1;
  void clear_task_id() ;
  const std::string& task_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_task_id(Arg_&& arg, Args_... args);
  std::string* mutable_task_id();
  PROTOBUF_NODISCARD std::string* release_task_id();
  void set_allocated_task_id(std::string* value);

  private:
  const std::string& _internal_task_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_task_id(
      const std::string& value);
  std::string* _internal_mutable_task_id();

  public:
  // @@protoc_insertion_point(class_scope:edgeservice.GetResultRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      44, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetResultRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr task_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_edgeservice_2eproto;
};
// -------------------------------------------------------------------

class GenPlayUrlResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edgeservice.GenPlayUrlResponse) */ {
 public:
  inline GenPlayUrlResponse() : GenPlayUrlResponse(nullptr) {}
  ~GenPlayUrlResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GenPlayUrlResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GenPlayUrlResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GenPlayUrlResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GenPlayUrlResponse(const GenPlayUrlResponse& from) : GenPlayUrlResponse(nullptr, from) {}
  inline GenPlayUrlResponse(GenPlayUrlResponse&& from) noexcept
      : GenPlayUrlResponse(nullptr, std::move(from)) {}
  inline GenPlayUrlResponse& operator=(const GenPlayUrlResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenPlayUrlResponse& operator=(GenPlayUrlResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenPlayUrlResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenPlayUrlResponse* internal_default_instance() {
    return reinterpret_cast<const GenPlayUrlResponse*>(
        &_GenPlayUrlResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(GenPlayUrlResponse& a, GenPlayUrlResponse& b) { a.Swap(&b); }
  inline void Swap(GenPlayUrlResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenPlayUrlResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenPlayUrlResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GenPlayUrlResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GenPlayUrlResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GenPlayUrlResponse& from) { GenPlayUrlResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GenPlayUrlResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "edgeservice.GenPlayUrlResponse"; }

 protected:
  explicit GenPlayUrlResponse(::google::protobuf::Arena* arena);
  GenPlayUrlResponse(::google::protobuf::Arena* arena, const GenPlayUrlResponse& from);
  GenPlayUrlResponse(::google::protobuf::Arena* arena, GenPlayUrlResponse&& from) noexcept
      : GenPlayUrlResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayUrlFieldNumber = 1,
    kMsgFieldNumber = 3,
    kCodeFieldNumber = 2,
  };
  // string play_url = 1;
  void clear_play_url() ;
  const std::string& play_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_play_url(Arg_&& arg, Args_... args);
  std::string* mutable_play_url();
  PROTOBUF_NODISCARD std::string* release_play_url();
  void set_allocated_play_url(std::string* value);

  private:
  const std::string& _internal_play_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_play_url(
      const std::string& value);
  std::string* _internal_mutable_play_url();

  public:
  // string msg = 3;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // int32 code = 2;
  void clear_code() ;
  ::int32_t code() const;
  void set_code(::int32_t value);

  private:
  ::int32_t _internal_code() const;
  void _internal_set_code(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edgeservice.GenPlayUrlResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      50, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GenPlayUrlResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr play_url_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::int32_t code_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_edgeservice_2eproto;
};
// -------------------------------------------------------------------

class GenPlayUrlRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edgeservice.GenPlayUrlRequest) */ {
 public:
  inline GenPlayUrlRequest() : GenPlayUrlRequest(nullptr) {}
  ~GenPlayUrlRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GenPlayUrlRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GenPlayUrlRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GenPlayUrlRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GenPlayUrlRequest(const GenPlayUrlRequest& from) : GenPlayUrlRequest(nullptr, from) {}
  inline GenPlayUrlRequest(GenPlayUrlRequest&& from) noexcept
      : GenPlayUrlRequest(nullptr, std::move(from)) {}
  inline GenPlayUrlRequest& operator=(const GenPlayUrlRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenPlayUrlRequest& operator=(GenPlayUrlRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenPlayUrlRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenPlayUrlRequest* internal_default_instance() {
    return reinterpret_cast<const GenPlayUrlRequest*>(
        &_GenPlayUrlRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(GenPlayUrlRequest& a, GenPlayUrlRequest& b) { a.Swap(&b); }
  inline void Swap(GenPlayUrlRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenPlayUrlRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenPlayUrlRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GenPlayUrlRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GenPlayUrlRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GenPlayUrlRequest& from) { GenPlayUrlRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GenPlayUrlRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "edgeservice.GenPlayUrlRequest"; }

 protected:
  explicit GenPlayUrlRequest(::google::protobuf::Arena* arena);
  GenPlayUrlRequest(::google::protobuf::Arena* arena, const GenPlayUrlRequest& from);
  GenPlayUrlRequest(::google::protobuf::Arena* arena, GenPlayUrlRequest&& from) noexcept
      : GenPlayUrlRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlayHostFieldNumber = 2,
    kCameraIdFieldNumber = 1,
    kPlayPortFieldNumber = 3,
  };
  // string play_host = 2;
  void clear_play_host() ;
  const std::string& play_host() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_play_host(Arg_&& arg, Args_... args);
  std::string* mutable_play_host();
  PROTOBUF_NODISCARD std::string* release_play_host();
  void set_allocated_play_host(std::string* value);

  private:
  const std::string& _internal_play_host() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_play_host(
      const std::string& value);
  std::string* _internal_mutable_play_host();

  public:
  // uint64 camera_id = 1;
  void clear_camera_id() ;
  ::uint64_t camera_id() const;
  void set_camera_id(::uint64_t value);

  private:
  ::uint64_t _internal_camera_id() const;
  void _internal_set_camera_id(::uint64_t value);

  public:
  // int32 play_port = 3;
  void clear_play_port() ;
  ::int32_t play_port() const;
  void set_play_port(::int32_t value);

  private:
  ::int32_t _internal_play_port() const;
  void _internal_set_play_port(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edgeservice.GenPlayUrlRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      47, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GenPlayUrlRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr play_host_;
    ::uint64_t camera_id_;
    ::int32_t play_port_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_edgeservice_2eproto;
};
// -------------------------------------------------------------------

class CaptureResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edgeservice.CaptureResponse) */ {
 public:
  inline CaptureResponse() : CaptureResponse(nullptr) {}
  ~CaptureResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CaptureResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CaptureResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CaptureResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CaptureResponse(const CaptureResponse& from) : CaptureResponse(nullptr, from) {}
  inline CaptureResponse(CaptureResponse&& from) noexcept
      : CaptureResponse(nullptr, std::move(from)) {}
  inline CaptureResponse& operator=(const CaptureResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CaptureResponse& operator=(CaptureResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CaptureResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CaptureResponse* internal_default_instance() {
    return reinterpret_cast<const CaptureResponse*>(
        &_CaptureResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CaptureResponse& a, CaptureResponse& b) { a.Swap(&b); }
  inline void Swap(CaptureResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CaptureResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CaptureResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CaptureResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CaptureResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CaptureResponse& from) { CaptureResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CaptureResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "edgeservice.CaptureResponse"; }

 protected:
  explicit CaptureResponse(::google::protobuf::Arena* arena);
  CaptureResponse(::google::protobuf::Arena* arena, const CaptureResponse& from);
  CaptureResponse(::google::protobuf::Arena* arena, CaptureResponse&& from) noexcept
      : CaptureResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgFieldNumber = 2,
    kCodeFieldNumber = 1,
  };
  // string msg = 2;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // int32 code = 1;
  void clear_code() ;
  ::int32_t code() const;
  void set_code(::int32_t value);

  private:
  ::int32_t _internal_code() const;
  void _internal_set_code(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edgeservice.CaptureResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      39, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CaptureResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::int32_t code_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_edgeservice_2eproto;
};
// -------------------------------------------------------------------

class CaptureRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edgeservice.CaptureRequest) */ {
 public:
  inline CaptureRequest() : CaptureRequest(nullptr) {}
  ~CaptureRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CaptureRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CaptureRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CaptureRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CaptureRequest(const CaptureRequest& from) : CaptureRequest(nullptr, from) {}
  inline CaptureRequest(CaptureRequest&& from) noexcept
      : CaptureRequest(nullptr, std::move(from)) {}
  inline CaptureRequest& operator=(const CaptureRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CaptureRequest& operator=(CaptureRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CaptureRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CaptureRequest* internal_default_instance() {
    return reinterpret_cast<const CaptureRequest*>(
        &_CaptureRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CaptureRequest& a, CaptureRequest& b) { a.Swap(&b); }
  inline void Swap(CaptureRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CaptureRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CaptureRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CaptureRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CaptureRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CaptureRequest& from) { CaptureRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CaptureRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "edgeservice.CaptureRequest"; }

 protected:
  explicit CaptureRequest(::google::protobuf::Arena* arena);
  CaptureRequest(::google::protobuf::Arena* arena, const CaptureRequest& from);
  CaptureRequest(::google::protobuf::Arena* arena, CaptureRequest&& from) noexcept
      : CaptureRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRtspUrlFieldNumber = 2,
    kCameraIdFieldNumber = 1,
  };
  // string rtsp_url = 2;
  void clear_rtsp_url() ;
  const std::string& rtsp_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rtsp_url(Arg_&& arg, Args_... args);
  std::string* mutable_rtsp_url();
  PROTOBUF_NODISCARD std::string* release_rtsp_url();
  void set_allocated_rtsp_url(std::string* value);

  private:
  const std::string& _internal_rtsp_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rtsp_url(
      const std::string& value);
  std::string* _internal_mutable_rtsp_url();

  public:
  // uint64 camera_id = 1;
  void clear_camera_id() ;
  ::uint64_t camera_id() const;
  void set_camera_id(::uint64_t value);

  private:
  ::uint64_t _internal_camera_id() const;
  void _internal_set_camera_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:edgeservice.CaptureRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      43, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CaptureRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr rtsp_url_;
    ::uint64_t camera_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_edgeservice_2eproto;
};
// -------------------------------------------------------------------

class CameraInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edgeservice.CameraInfo) */ {
 public:
  inline CameraInfo() : CameraInfo(nullptr) {}
  ~CameraInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CameraInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CameraInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline CameraInfo(const CameraInfo& from) : CameraInfo(nullptr, from) {}
  inline CameraInfo(CameraInfo&& from) noexcept
      : CameraInfo(nullptr, std::move(from)) {}
  inline CameraInfo& operator=(const CameraInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraInfo& operator=(CameraInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CameraInfo* internal_default_instance() {
    return reinterpret_cast<const CameraInfo*>(
        &_CameraInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CameraInfo& a, CameraInfo& b) { a.Swap(&b); }
  inline void Swap(CameraInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CameraInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CameraInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CameraInfo& from) { CameraInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CameraInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "edgeservice.CameraInfo"; }

 protected:
  explicit CameraInfo(::google::protobuf::Arena* arena);
  CameraInfo(::google::protobuf::Arena* arena, const CameraInfo& from);
  CameraInfo(::google::protobuf::Arena* arena, CameraInfo&& from) noexcept
      : CameraInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRtspUrlFieldNumber = 2,
    kCameraIdFieldNumber = 1,
  };
  // string rtsp_url = 2;
  void clear_rtsp_url() ;
  const std::string& rtsp_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rtsp_url(Arg_&& arg, Args_... args);
  std::string* mutable_rtsp_url();
  PROTOBUF_NODISCARD std::string* release_rtsp_url();
  void set_allocated_rtsp_url(std::string* value);

  private:
  const std::string& _internal_rtsp_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rtsp_url(
      const std::string& value);
  std::string* _internal_mutable_rtsp_url();

  public:
  // uint64 camera_id = 1;
  void clear_camera_id() ;
  ::uint64_t camera_id() const;
  void set_camera_id(::uint64_t value);

  private:
  ::uint64_t _internal_camera_id() const;
  void _internal_set_camera_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:edgeservice.CameraInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      39, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CameraInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr rtsp_url_;
    ::uint64_t camera_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_edgeservice_2eproto;
};
// -------------------------------------------------------------------

class CameraCheckResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edgeservice.CameraCheckResult) */ {
 public:
  inline CameraCheckResult() : CameraCheckResult(nullptr) {}
  ~CameraCheckResult() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CameraCheckResult* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CameraCheckResult));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CameraCheckResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline CameraCheckResult(const CameraCheckResult& from) : CameraCheckResult(nullptr, from) {}
  inline CameraCheckResult(CameraCheckResult&& from) noexcept
      : CameraCheckResult(nullptr, std::move(from)) {}
  inline CameraCheckResult& operator=(const CameraCheckResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraCheckResult& operator=(CameraCheckResult&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraCheckResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CameraCheckResult* internal_default_instance() {
    return reinterpret_cast<const CameraCheckResult*>(
        &_CameraCheckResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(CameraCheckResult& a, CameraCheckResult& b) { a.Swap(&b); }
  inline void Swap(CameraCheckResult* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraCheckResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CameraCheckResult* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CameraCheckResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CameraCheckResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CameraCheckResult& from) { CameraCheckResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CameraCheckResult* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "edgeservice.CameraCheckResult"; }

 protected:
  explicit CameraCheckResult(::google::protobuf::Arena* arena);
  CameraCheckResult(::google::protobuf::Arena* arena, const CameraCheckResult& from);
  CameraCheckResult(::google::protobuf::Arena* arena, CameraCheckResult&& from) noexcept
      : CameraCheckResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgFieldNumber = 3,
    kCameraIdFieldNumber = 1,
    kCodeFieldNumber = 2,
  };
  // string msg = 3;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // uint64 camera_id = 1;
  void clear_camera_id() ;
  ::uint64_t camera_id() const;
  void set_camera_id(::uint64_t value);

  private:
  ::uint64_t _internal_camera_id() const;
  void _internal_set_camera_id(::uint64_t value);

  public:
  // int32 code = 2;
  void clear_code() ;
  ::int32_t code() const;
  void set_code(::int32_t value);

  private:
  ::int32_t _internal_code() const;
  void _internal_set_code(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edgeservice.CameraCheckResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      41, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CameraCheckResult& from_msg);
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::uint64_t camera_id_;
    ::int32_t code_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_edgeservice_2eproto;
};
// -------------------------------------------------------------------

class AsyncCaptureResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edgeservice.AsyncCaptureResponse) */ {
 public:
  inline AsyncCaptureResponse() : AsyncCaptureResponse(nullptr) {}
  ~AsyncCaptureResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AsyncCaptureResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AsyncCaptureResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AsyncCaptureResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AsyncCaptureResponse(const AsyncCaptureResponse& from) : AsyncCaptureResponse(nullptr, from) {}
  inline AsyncCaptureResponse(AsyncCaptureResponse&& from) noexcept
      : AsyncCaptureResponse(nullptr, std::move(from)) {}
  inline AsyncCaptureResponse& operator=(const AsyncCaptureResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AsyncCaptureResponse& operator=(AsyncCaptureResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AsyncCaptureResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AsyncCaptureResponse* internal_default_instance() {
    return reinterpret_cast<const AsyncCaptureResponse*>(
        &_AsyncCaptureResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(AsyncCaptureResponse& a, AsyncCaptureResponse& b) { a.Swap(&b); }
  inline void Swap(AsyncCaptureResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AsyncCaptureResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AsyncCaptureResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AsyncCaptureResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AsyncCaptureResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AsyncCaptureResponse& from) { AsyncCaptureResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AsyncCaptureResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "edgeservice.AsyncCaptureResponse"; }

 protected:
  explicit AsyncCaptureResponse(::google::protobuf::Arena* arena);
  AsyncCaptureResponse(::google::protobuf::Arena* arena, const AsyncCaptureResponse& from);
  AsyncCaptureResponse(::google::protobuf::Arena* arena, AsyncCaptureResponse&& from) noexcept
      : AsyncCaptureResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgFieldNumber = 2,
    kTaskIdFieldNumber = 3,
    kCodeFieldNumber = 1,
  };
  // string msg = 2;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // string task_id = 3;
  void clear_task_id() ;
  const std::string& task_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_task_id(Arg_&& arg, Args_... args);
  std::string* mutable_task_id();
  PROTOBUF_NODISCARD std::string* release_task_id();
  void set_allocated_task_id(std::string* value);

  private:
  const std::string& _internal_task_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_task_id(
      const std::string& value);
  std::string* _internal_mutable_task_id();

  public:
  // int32 code = 1;
  void clear_code() ;
  ::int32_t code() const;
  void set_code(::int32_t value);

  private:
  ::int32_t _internal_code() const;
  void _internal_set_code(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edgeservice.AsyncCaptureResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      51, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AsyncCaptureResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::google::protobuf::internal::ArenaStringPtr task_id_;
    ::int32_t code_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_edgeservice_2eproto;
};
// -------------------------------------------------------------------

class GetResultResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edgeservice.GetResultResponse) */ {
 public:
  inline GetResultResponse() : GetResultResponse(nullptr) {}
  ~GetResultResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetResultResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetResultResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetResultResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetResultResponse(const GetResultResponse& from) : GetResultResponse(nullptr, from) {}
  inline GetResultResponse(GetResultResponse&& from) noexcept
      : GetResultResponse(nullptr, std::move(from)) {}
  inline GetResultResponse& operator=(const GetResultResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetResultResponse& operator=(GetResultResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetResultResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetResultResponse* internal_default_instance() {
    return reinterpret_cast<const GetResultResponse*>(
        &_GetResultResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(GetResultResponse& a, GetResultResponse& b) { a.Swap(&b); }
  inline void Swap(GetResultResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetResultResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetResultResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetResultResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetResultResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetResultResponse& from) { GetResultResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetResultResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "edgeservice.GetResultResponse"; }

 protected:
  explicit GetResultResponse(::google::protobuf::Arena* arena);
  GetResultResponse(::google::protobuf::Arena* arena, const GetResultResponse& from);
  GetResultResponse(::google::protobuf::Arena* arena, GetResultResponse&& from) noexcept
      : GetResultResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultsFieldNumber = 4,
    kMsgFieldNumber = 2,
    kTaskIdFieldNumber = 3,
    kCodeFieldNumber = 1,
  };
  // repeated .edgeservice.CameraCheckResult results = 4;
  int results_size() const;
  private:
  int _internal_results_size() const;

  public:
  void clear_results() ;
  ::edgeservice::CameraCheckResult* mutable_results(int index);
  ::google::protobuf::RepeatedPtrField<::edgeservice::CameraCheckResult>* mutable_results();

  private:
  const ::google::protobuf::RepeatedPtrField<::edgeservice::CameraCheckResult>& _internal_results() const;
  ::google::protobuf::RepeatedPtrField<::edgeservice::CameraCheckResult>* _internal_mutable_results();
  public:
  const ::edgeservice::CameraCheckResult& results(int index) const;
  ::edgeservice::CameraCheckResult* add_results();
  const ::google::protobuf::RepeatedPtrField<::edgeservice::CameraCheckResult>& results() const;
  // string msg = 2;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // string task_id = 3;
  void clear_task_id() ;
  const std::string& task_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_task_id(Arg_&& arg, Args_... args);
  std::string* mutable_task_id();
  PROTOBUF_NODISCARD std::string* release_task_id();
  void set_allocated_task_id(std::string* value);

  private:
  const std::string& _internal_task_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_task_id(
      const std::string& value);
  std::string* _internal_mutable_task_id();

  public:
  // int32 code = 1;
  void clear_code() ;
  ::int32_t code() const;
  void set_code(::int32_t value);

  private:
  ::int32_t _internal_code() const;
  void _internal_set_code(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edgeservice.GetResultResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      48, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetResultResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::edgeservice::CameraCheckResult > results_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::google::protobuf::internal::ArenaStringPtr task_id_;
    ::int32_t code_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_edgeservice_2eproto;
};
// -------------------------------------------------------------------

class AsyncCaptureRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:edgeservice.AsyncCaptureRequest) */ {
 public:
  inline AsyncCaptureRequest() : AsyncCaptureRequest(nullptr) {}
  ~AsyncCaptureRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AsyncCaptureRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AsyncCaptureRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AsyncCaptureRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AsyncCaptureRequest(const AsyncCaptureRequest& from) : AsyncCaptureRequest(nullptr, from) {}
  inline AsyncCaptureRequest(AsyncCaptureRequest&& from) noexcept
      : AsyncCaptureRequest(nullptr, std::move(from)) {}
  inline AsyncCaptureRequest& operator=(const AsyncCaptureRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AsyncCaptureRequest& operator=(AsyncCaptureRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AsyncCaptureRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AsyncCaptureRequest* internal_default_instance() {
    return reinterpret_cast<const AsyncCaptureRequest*>(
        &_AsyncCaptureRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(AsyncCaptureRequest& a, AsyncCaptureRequest& b) { a.Swap(&b); }
  inline void Swap(AsyncCaptureRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AsyncCaptureRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AsyncCaptureRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AsyncCaptureRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AsyncCaptureRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AsyncCaptureRequest& from) { AsyncCaptureRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AsyncCaptureRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "edgeservice.AsyncCaptureRequest"; }

 protected:
  explicit AsyncCaptureRequest(::google::protobuf::Arena* arena);
  AsyncCaptureRequest(::google::protobuf::Arena* arena, const AsyncCaptureRequest& from);
  AsyncCaptureRequest(::google::protobuf::Arena* arena, AsyncCaptureRequest&& from) noexcept
      : AsyncCaptureRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCamerasFieldNumber = 1,
    kTimeoutFieldNumber = 2,
  };
  // repeated .edgeservice.CameraInfo cameras = 1;
  int cameras_size() const;
  private:
  int _internal_cameras_size() const;

  public:
  void clear_cameras() ;
  ::edgeservice::CameraInfo* mutable_cameras(int index);
  ::google::protobuf::RepeatedPtrField<::edgeservice::CameraInfo>* mutable_cameras();

  private:
  const ::google::protobuf::RepeatedPtrField<::edgeservice::CameraInfo>& _internal_cameras() const;
  ::google::protobuf::RepeatedPtrField<::edgeservice::CameraInfo>* _internal_mutable_cameras();
  public:
  const ::edgeservice::CameraInfo& cameras(int index) const;
  ::edgeservice::CameraInfo* add_cameras();
  const ::google::protobuf::RepeatedPtrField<::edgeservice::CameraInfo>& cameras() const;
  // int32 timeout = 2;
  void clear_timeout() ;
  ::int32_t timeout() const;
  void set_timeout(::int32_t value);

  private:
  ::int32_t _internal_timeout() const;
  void _internal_set_timeout(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:edgeservice.AsyncCaptureRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AsyncCaptureRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::edgeservice::CameraInfo > cameras_;
    ::int32_t timeout_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_edgeservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CaptureRequest

// uint64 camera_id = 1;
inline void CaptureRequest::clear_camera_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_id_ = ::uint64_t{0u};
}
inline ::uint64_t CaptureRequest::camera_id() const {
  // @@protoc_insertion_point(field_get:edgeservice.CaptureRequest.camera_id)
  return _internal_camera_id();
}
inline void CaptureRequest::set_camera_id(::uint64_t value) {
  _internal_set_camera_id(value);
  // @@protoc_insertion_point(field_set:edgeservice.CaptureRequest.camera_id)
}
inline ::uint64_t CaptureRequest::_internal_camera_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.camera_id_;
}
inline void CaptureRequest::_internal_set_camera_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_id_ = value;
}

// string rtsp_url = 2;
inline void CaptureRequest::clear_rtsp_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rtsp_url_.ClearToEmpty();
}
inline const std::string& CaptureRequest::rtsp_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edgeservice.CaptureRequest.rtsp_url)
  return _internal_rtsp_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CaptureRequest::set_rtsp_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rtsp_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edgeservice.CaptureRequest.rtsp_url)
}
inline std::string* CaptureRequest::mutable_rtsp_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rtsp_url();
  // @@protoc_insertion_point(field_mutable:edgeservice.CaptureRequest.rtsp_url)
  return _s;
}
inline const std::string& CaptureRequest::_internal_rtsp_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rtsp_url_.Get();
}
inline void CaptureRequest::_internal_set_rtsp_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rtsp_url_.Set(value, GetArena());
}
inline std::string* CaptureRequest::_internal_mutable_rtsp_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.rtsp_url_.Mutable( GetArena());
}
inline std::string* CaptureRequest::release_rtsp_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edgeservice.CaptureRequest.rtsp_url)
  return _impl_.rtsp_url_.Release();
}
inline void CaptureRequest::set_allocated_rtsp_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rtsp_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.rtsp_url_.IsDefault()) {
    _impl_.rtsp_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:edgeservice.CaptureRequest.rtsp_url)
}

// -------------------------------------------------------------------

// CaptureResponse

// int32 code = 1;
inline void CaptureResponse::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = 0;
}
inline ::int32_t CaptureResponse::code() const {
  // @@protoc_insertion_point(field_get:edgeservice.CaptureResponse.code)
  return _internal_code();
}
inline void CaptureResponse::set_code(::int32_t value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:edgeservice.CaptureResponse.code)
}
inline ::int32_t CaptureResponse::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_;
}
inline void CaptureResponse::_internal_set_code(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = value;
}

// string msg = 2;
inline void CaptureResponse::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& CaptureResponse::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edgeservice.CaptureResponse.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CaptureResponse::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edgeservice.CaptureResponse.msg)
}
inline std::string* CaptureResponse::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:edgeservice.CaptureResponse.msg)
  return _s;
}
inline const std::string& CaptureResponse::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void CaptureResponse::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* CaptureResponse::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* CaptureResponse::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edgeservice.CaptureResponse.msg)
  return _impl_.msg_.Release();
}
inline void CaptureResponse::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.msg_.IsDefault()) {
    _impl_.msg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:edgeservice.CaptureResponse.msg)
}

// -------------------------------------------------------------------

// CameraInfo

// uint64 camera_id = 1;
inline void CameraInfo::clear_camera_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_id_ = ::uint64_t{0u};
}
inline ::uint64_t CameraInfo::camera_id() const {
  // @@protoc_insertion_point(field_get:edgeservice.CameraInfo.camera_id)
  return _internal_camera_id();
}
inline void CameraInfo::set_camera_id(::uint64_t value) {
  _internal_set_camera_id(value);
  // @@protoc_insertion_point(field_set:edgeservice.CameraInfo.camera_id)
}
inline ::uint64_t CameraInfo::_internal_camera_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.camera_id_;
}
inline void CameraInfo::_internal_set_camera_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_id_ = value;
}

// string rtsp_url = 2;
inline void CameraInfo::clear_rtsp_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rtsp_url_.ClearToEmpty();
}
inline const std::string& CameraInfo::rtsp_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edgeservice.CameraInfo.rtsp_url)
  return _internal_rtsp_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CameraInfo::set_rtsp_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rtsp_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edgeservice.CameraInfo.rtsp_url)
}
inline std::string* CameraInfo::mutable_rtsp_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rtsp_url();
  // @@protoc_insertion_point(field_mutable:edgeservice.CameraInfo.rtsp_url)
  return _s;
}
inline const std::string& CameraInfo::_internal_rtsp_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rtsp_url_.Get();
}
inline void CameraInfo::_internal_set_rtsp_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rtsp_url_.Set(value, GetArena());
}
inline std::string* CameraInfo::_internal_mutable_rtsp_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.rtsp_url_.Mutable( GetArena());
}
inline std::string* CameraInfo::release_rtsp_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edgeservice.CameraInfo.rtsp_url)
  return _impl_.rtsp_url_.Release();
}
inline void CameraInfo::set_allocated_rtsp_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rtsp_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.rtsp_url_.IsDefault()) {
    _impl_.rtsp_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:edgeservice.CameraInfo.rtsp_url)
}

// -------------------------------------------------------------------

// AsyncCaptureRequest

// repeated .edgeservice.CameraInfo cameras = 1;
inline int AsyncCaptureRequest::_internal_cameras_size() const {
  return _internal_cameras().size();
}
inline int AsyncCaptureRequest::cameras_size() const {
  return _internal_cameras_size();
}
inline void AsyncCaptureRequest::clear_cameras() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cameras_.Clear();
}
inline ::edgeservice::CameraInfo* AsyncCaptureRequest::mutable_cameras(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edgeservice.AsyncCaptureRequest.cameras)
  return _internal_mutable_cameras()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edgeservice::CameraInfo>* AsyncCaptureRequest::mutable_cameras()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edgeservice.AsyncCaptureRequest.cameras)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_cameras();
}
inline const ::edgeservice::CameraInfo& AsyncCaptureRequest::cameras(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edgeservice.AsyncCaptureRequest.cameras)
  return _internal_cameras().Get(index);
}
inline ::edgeservice::CameraInfo* AsyncCaptureRequest::add_cameras() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edgeservice::CameraInfo* _add = _internal_mutable_cameras()->Add();
  // @@protoc_insertion_point(field_add:edgeservice.AsyncCaptureRequest.cameras)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edgeservice::CameraInfo>& AsyncCaptureRequest::cameras() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edgeservice.AsyncCaptureRequest.cameras)
  return _internal_cameras();
}
inline const ::google::protobuf::RepeatedPtrField<::edgeservice::CameraInfo>&
AsyncCaptureRequest::_internal_cameras() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cameras_;
}
inline ::google::protobuf::RepeatedPtrField<::edgeservice::CameraInfo>*
AsyncCaptureRequest::_internal_mutable_cameras() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.cameras_;
}

// int32 timeout = 2;
inline void AsyncCaptureRequest::clear_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = 0;
}
inline ::int32_t AsyncCaptureRequest::timeout() const {
  // @@protoc_insertion_point(field_get:edgeservice.AsyncCaptureRequest.timeout)
  return _internal_timeout();
}
inline void AsyncCaptureRequest::set_timeout(::int32_t value) {
  _internal_set_timeout(value);
  // @@protoc_insertion_point(field_set:edgeservice.AsyncCaptureRequest.timeout)
}
inline ::int32_t AsyncCaptureRequest::_internal_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timeout_;
}
inline void AsyncCaptureRequest::_internal_set_timeout(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = value;
}

// -------------------------------------------------------------------

// AsyncCaptureResponse

// int32 code = 1;
inline void AsyncCaptureResponse::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = 0;
}
inline ::int32_t AsyncCaptureResponse::code() const {
  // @@protoc_insertion_point(field_get:edgeservice.AsyncCaptureResponse.code)
  return _internal_code();
}
inline void AsyncCaptureResponse::set_code(::int32_t value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:edgeservice.AsyncCaptureResponse.code)
}
inline ::int32_t AsyncCaptureResponse::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_;
}
inline void AsyncCaptureResponse::_internal_set_code(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = value;
}

// string msg = 2;
inline void AsyncCaptureResponse::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& AsyncCaptureResponse::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edgeservice.AsyncCaptureResponse.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AsyncCaptureResponse::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edgeservice.AsyncCaptureResponse.msg)
}
inline std::string* AsyncCaptureResponse::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:edgeservice.AsyncCaptureResponse.msg)
  return _s;
}
inline const std::string& AsyncCaptureResponse::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void AsyncCaptureResponse::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* AsyncCaptureResponse::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* AsyncCaptureResponse::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edgeservice.AsyncCaptureResponse.msg)
  return _impl_.msg_.Release();
}
inline void AsyncCaptureResponse::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.msg_.IsDefault()) {
    _impl_.msg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:edgeservice.AsyncCaptureResponse.msg)
}

// string task_id = 3;
inline void AsyncCaptureResponse::clear_task_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_.ClearToEmpty();
}
inline const std::string& AsyncCaptureResponse::task_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edgeservice.AsyncCaptureResponse.task_id)
  return _internal_task_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AsyncCaptureResponse::set_task_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edgeservice.AsyncCaptureResponse.task_id)
}
inline std::string* AsyncCaptureResponse::mutable_task_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_task_id();
  // @@protoc_insertion_point(field_mutable:edgeservice.AsyncCaptureResponse.task_id)
  return _s;
}
inline const std::string& AsyncCaptureResponse::_internal_task_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.task_id_.Get();
}
inline void AsyncCaptureResponse::_internal_set_task_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_.Set(value, GetArena());
}
inline std::string* AsyncCaptureResponse::_internal_mutable_task_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.task_id_.Mutable( GetArena());
}
inline std::string* AsyncCaptureResponse::release_task_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edgeservice.AsyncCaptureResponse.task_id)
  return _impl_.task_id_.Release();
}
inline void AsyncCaptureResponse::set_allocated_task_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.task_id_.IsDefault()) {
    _impl_.task_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:edgeservice.AsyncCaptureResponse.task_id)
}

// -------------------------------------------------------------------

// GetResultRequest

// string task_id = 1;
inline void GetResultRequest::clear_task_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_.ClearToEmpty();
}
inline const std::string& GetResultRequest::task_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edgeservice.GetResultRequest.task_id)
  return _internal_task_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetResultRequest::set_task_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edgeservice.GetResultRequest.task_id)
}
inline std::string* GetResultRequest::mutable_task_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_task_id();
  // @@protoc_insertion_point(field_mutable:edgeservice.GetResultRequest.task_id)
  return _s;
}
inline const std::string& GetResultRequest::_internal_task_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.task_id_.Get();
}
inline void GetResultRequest::_internal_set_task_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_.Set(value, GetArena());
}
inline std::string* GetResultRequest::_internal_mutable_task_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.task_id_.Mutable( GetArena());
}
inline std::string* GetResultRequest::release_task_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edgeservice.GetResultRequest.task_id)
  return _impl_.task_id_.Release();
}
inline void GetResultRequest::set_allocated_task_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.task_id_.IsDefault()) {
    _impl_.task_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:edgeservice.GetResultRequest.task_id)
}

// -------------------------------------------------------------------

// CameraCheckResult

// uint64 camera_id = 1;
inline void CameraCheckResult::clear_camera_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_id_ = ::uint64_t{0u};
}
inline ::uint64_t CameraCheckResult::camera_id() const {
  // @@protoc_insertion_point(field_get:edgeservice.CameraCheckResult.camera_id)
  return _internal_camera_id();
}
inline void CameraCheckResult::set_camera_id(::uint64_t value) {
  _internal_set_camera_id(value);
  // @@protoc_insertion_point(field_set:edgeservice.CameraCheckResult.camera_id)
}
inline ::uint64_t CameraCheckResult::_internal_camera_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.camera_id_;
}
inline void CameraCheckResult::_internal_set_camera_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_id_ = value;
}

// int32 code = 2;
inline void CameraCheckResult::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = 0;
}
inline ::int32_t CameraCheckResult::code() const {
  // @@protoc_insertion_point(field_get:edgeservice.CameraCheckResult.code)
  return _internal_code();
}
inline void CameraCheckResult::set_code(::int32_t value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:edgeservice.CameraCheckResult.code)
}
inline ::int32_t CameraCheckResult::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_;
}
inline void CameraCheckResult::_internal_set_code(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = value;
}

// string msg = 3;
inline void CameraCheckResult::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& CameraCheckResult::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edgeservice.CameraCheckResult.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CameraCheckResult::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edgeservice.CameraCheckResult.msg)
}
inline std::string* CameraCheckResult::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:edgeservice.CameraCheckResult.msg)
  return _s;
}
inline const std::string& CameraCheckResult::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void CameraCheckResult::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* CameraCheckResult::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* CameraCheckResult::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edgeservice.CameraCheckResult.msg)
  return _impl_.msg_.Release();
}
inline void CameraCheckResult::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.msg_.IsDefault()) {
    _impl_.msg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:edgeservice.CameraCheckResult.msg)
}

// -------------------------------------------------------------------

// GetResultResponse

// int32 code = 1;
inline void GetResultResponse::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = 0;
}
inline ::int32_t GetResultResponse::code() const {
  // @@protoc_insertion_point(field_get:edgeservice.GetResultResponse.code)
  return _internal_code();
}
inline void GetResultResponse::set_code(::int32_t value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:edgeservice.GetResultResponse.code)
}
inline ::int32_t GetResultResponse::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_;
}
inline void GetResultResponse::_internal_set_code(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = value;
}

// string msg = 2;
inline void GetResultResponse::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GetResultResponse::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edgeservice.GetResultResponse.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetResultResponse::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edgeservice.GetResultResponse.msg)
}
inline std::string* GetResultResponse::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:edgeservice.GetResultResponse.msg)
  return _s;
}
inline const std::string& GetResultResponse::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void GetResultResponse::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* GetResultResponse::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* GetResultResponse::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edgeservice.GetResultResponse.msg)
  return _impl_.msg_.Release();
}
inline void GetResultResponse::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.msg_.IsDefault()) {
    _impl_.msg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:edgeservice.GetResultResponse.msg)
}

// string task_id = 3;
inline void GetResultResponse::clear_task_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_.ClearToEmpty();
}
inline const std::string& GetResultResponse::task_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edgeservice.GetResultResponse.task_id)
  return _internal_task_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetResultResponse::set_task_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edgeservice.GetResultResponse.task_id)
}
inline std::string* GetResultResponse::mutable_task_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_task_id();
  // @@protoc_insertion_point(field_mutable:edgeservice.GetResultResponse.task_id)
  return _s;
}
inline const std::string& GetResultResponse::_internal_task_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.task_id_.Get();
}
inline void GetResultResponse::_internal_set_task_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_.Set(value, GetArena());
}
inline std::string* GetResultResponse::_internal_mutable_task_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.task_id_.Mutable( GetArena());
}
inline std::string* GetResultResponse::release_task_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edgeservice.GetResultResponse.task_id)
  return _impl_.task_id_.Release();
}
inline void GetResultResponse::set_allocated_task_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.task_id_.IsDefault()) {
    _impl_.task_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:edgeservice.GetResultResponse.task_id)
}

// repeated .edgeservice.CameraCheckResult results = 4;
inline int GetResultResponse::_internal_results_size() const {
  return _internal_results().size();
}
inline int GetResultResponse::results_size() const {
  return _internal_results_size();
}
inline void GetResultResponse::clear_results() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.results_.Clear();
}
inline ::edgeservice::CameraCheckResult* GetResultResponse::mutable_results(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:edgeservice.GetResultResponse.results)
  return _internal_mutable_results()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::edgeservice::CameraCheckResult>* GetResultResponse::mutable_results()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:edgeservice.GetResultResponse.results)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_results();
}
inline const ::edgeservice::CameraCheckResult& GetResultResponse::results(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edgeservice.GetResultResponse.results)
  return _internal_results().Get(index);
}
inline ::edgeservice::CameraCheckResult* GetResultResponse::add_results() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::edgeservice::CameraCheckResult* _add = _internal_mutable_results()->Add();
  // @@protoc_insertion_point(field_add:edgeservice.GetResultResponse.results)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::edgeservice::CameraCheckResult>& GetResultResponse::results() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:edgeservice.GetResultResponse.results)
  return _internal_results();
}
inline const ::google::protobuf::RepeatedPtrField<::edgeservice::CameraCheckResult>&
GetResultResponse::_internal_results() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.results_;
}
inline ::google::protobuf::RepeatedPtrField<::edgeservice::CameraCheckResult>*
GetResultResponse::_internal_mutable_results() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.results_;
}

// -------------------------------------------------------------------

// GenPlayUrlRequest

// uint64 camera_id = 1;
inline void GenPlayUrlRequest::clear_camera_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_id_ = ::uint64_t{0u};
}
inline ::uint64_t GenPlayUrlRequest::camera_id() const {
  // @@protoc_insertion_point(field_get:edgeservice.GenPlayUrlRequest.camera_id)
  return _internal_camera_id();
}
inline void GenPlayUrlRequest::set_camera_id(::uint64_t value) {
  _internal_set_camera_id(value);
  // @@protoc_insertion_point(field_set:edgeservice.GenPlayUrlRequest.camera_id)
}
inline ::uint64_t GenPlayUrlRequest::_internal_camera_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.camera_id_;
}
inline void GenPlayUrlRequest::_internal_set_camera_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_id_ = value;
}

// string play_host = 2;
inline void GenPlayUrlRequest::clear_play_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.play_host_.ClearToEmpty();
}
inline const std::string& GenPlayUrlRequest::play_host() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edgeservice.GenPlayUrlRequest.play_host)
  return _internal_play_host();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GenPlayUrlRequest::set_play_host(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.play_host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edgeservice.GenPlayUrlRequest.play_host)
}
inline std::string* GenPlayUrlRequest::mutable_play_host() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_play_host();
  // @@protoc_insertion_point(field_mutable:edgeservice.GenPlayUrlRequest.play_host)
  return _s;
}
inline const std::string& GenPlayUrlRequest::_internal_play_host() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.play_host_.Get();
}
inline void GenPlayUrlRequest::_internal_set_play_host(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.play_host_.Set(value, GetArena());
}
inline std::string* GenPlayUrlRequest::_internal_mutable_play_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.play_host_.Mutable( GetArena());
}
inline std::string* GenPlayUrlRequest::release_play_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edgeservice.GenPlayUrlRequest.play_host)
  return _impl_.play_host_.Release();
}
inline void GenPlayUrlRequest::set_allocated_play_host(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.play_host_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.play_host_.IsDefault()) {
    _impl_.play_host_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:edgeservice.GenPlayUrlRequest.play_host)
}

// int32 play_port = 3;
inline void GenPlayUrlRequest::clear_play_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.play_port_ = 0;
}
inline ::int32_t GenPlayUrlRequest::play_port() const {
  // @@protoc_insertion_point(field_get:edgeservice.GenPlayUrlRequest.play_port)
  return _internal_play_port();
}
inline void GenPlayUrlRequest::set_play_port(::int32_t value) {
  _internal_set_play_port(value);
  // @@protoc_insertion_point(field_set:edgeservice.GenPlayUrlRequest.play_port)
}
inline ::int32_t GenPlayUrlRequest::_internal_play_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.play_port_;
}
inline void GenPlayUrlRequest::_internal_set_play_port(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.play_port_ = value;
}

// -------------------------------------------------------------------

// GenPlayUrlResponse

// string play_url = 1;
inline void GenPlayUrlResponse::clear_play_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.play_url_.ClearToEmpty();
}
inline const std::string& GenPlayUrlResponse::play_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edgeservice.GenPlayUrlResponse.play_url)
  return _internal_play_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GenPlayUrlResponse::set_play_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.play_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edgeservice.GenPlayUrlResponse.play_url)
}
inline std::string* GenPlayUrlResponse::mutable_play_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_play_url();
  // @@protoc_insertion_point(field_mutable:edgeservice.GenPlayUrlResponse.play_url)
  return _s;
}
inline const std::string& GenPlayUrlResponse::_internal_play_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.play_url_.Get();
}
inline void GenPlayUrlResponse::_internal_set_play_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.play_url_.Set(value, GetArena());
}
inline std::string* GenPlayUrlResponse::_internal_mutable_play_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.play_url_.Mutable( GetArena());
}
inline std::string* GenPlayUrlResponse::release_play_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edgeservice.GenPlayUrlResponse.play_url)
  return _impl_.play_url_.Release();
}
inline void GenPlayUrlResponse::set_allocated_play_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.play_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.play_url_.IsDefault()) {
    _impl_.play_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:edgeservice.GenPlayUrlResponse.play_url)
}

// int32 code = 2;
inline void GenPlayUrlResponse::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = 0;
}
inline ::int32_t GenPlayUrlResponse::code() const {
  // @@protoc_insertion_point(field_get:edgeservice.GenPlayUrlResponse.code)
  return _internal_code();
}
inline void GenPlayUrlResponse::set_code(::int32_t value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:edgeservice.GenPlayUrlResponse.code)
}
inline ::int32_t GenPlayUrlResponse::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_;
}
inline void GenPlayUrlResponse::_internal_set_code(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = value;
}

// string msg = 3;
inline void GenPlayUrlResponse::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GenPlayUrlResponse::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:edgeservice.GenPlayUrlResponse.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GenPlayUrlResponse::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:edgeservice.GenPlayUrlResponse.msg)
}
inline std::string* GenPlayUrlResponse::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:edgeservice.GenPlayUrlResponse.msg)
  return _s;
}
inline const std::string& GenPlayUrlResponse::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void GenPlayUrlResponse::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* GenPlayUrlResponse::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* GenPlayUrlResponse::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:edgeservice.GenPlayUrlResponse.msg)
  return _impl_.msg_.Release();
}
inline void GenPlayUrlResponse::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.msg_.IsDefault()) {
    _impl_.msg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:edgeservice.GenPlayUrlResponse.msg)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace edgeservice


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // edgeservice_2eproto_2epb_2eh
